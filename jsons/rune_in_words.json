{
  "blank": "<div><h4>blank: string</h4><div class=\"description\"><p>Rune with the shape of a blank square</p></div></div>",
  "circle": "<div><h4>circle: string</h4><div class=\"description\"><p>Rune with the shape of a circle</p></div></div>",
  "corner": "<div><h4>corner: string</h4><div class=\"description\"><p>Rune with black triangle,  \nfilling upper right corner</p></div></div>",
  "heart": "<div><h4>heart: string</h4><div class=\"description\"><p>Rune with the shape of a heart</p></div></div>",
  "nova": "<div><h4>nova: string</h4><div class=\"description\"><p>Rune with the shape of two overlapping  \ntriangles, residing in the upper half  \nof the shape</p></div></div>",
  "pentagram": "<div><h4>pentagram: string</h4><div class=\"description\"><p>Rune with the shape of a pentagram</p></div></div>",
  "rcross": "<div><h4>rcross: string</h4><div class=\"description\"><p>Rune with the shape of a  \nsmall square inside a large square,  \neach diagonally split into a  \nblack and white half</p></div></div>",
  "ribbon": "<div><h4>ribbon: string</h4><div class=\"description\"><p>Rune with the shape of a ribbon  \nwinding outwards in an anticlockwise spiral</p></div></div>",
  "sail": "<div><h4>sail: string</h4><div class=\"description\"><p>Rune with the shape of a sail</p></div></div>",
  "square": "<div><h4>square: string</h4><div class=\"description\"><p>Rune with the shape of a full square</p></div></div>",
  "triangle": "<div><h4>triangle: string</h4><div class=\"description\"><p>Rune with the shape of a triangle</p></div></div>",
  "anaglyph": "<div><h4>anaglyph(rune: string) → {string}</h4><div class=\"description\"><p>Renders the specified Rune in a tab as an anaglyph. Use 3D glasses to view the  \nanaglyph.</p></div></div>",
  "beside": "<div><h4>beside(rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from two given Runes by  \nplacing the first on the left of the second,  \nboth occupying equal portions of the width  \nof the result</p></div></div>",
  "beside_frac": "<div><h4>beside_frac(frac: number, rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from two given Runes by  \nplacing the first on the left of the second  \nsuch that the first one occupies frac  \nportion of the width of the result and  \nthe second the rest</p></div></div>",
  "black": "<div><h4>black(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune black (#000000).</p></div></div>",
  "blue": "<div><h4>blue(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune blue (#2196F3).</p></div></div>",
  "brown": "<div><h4>brown(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune brown.</p></div></div>",
  "color": "<div><h4>color(rune: string, r: number, g: number, b: number) → {string}</h4><div class=\"description\"><p>Adds color to rune by specifying  \nthe red, green, blue (RGB) value, ranging from 0.0 to 1.0.  \nRGB is additive: if all values are 1, the color is white,  \nand if all values are 0, the color is black.</p></div></div>",
  "flip_horiz": "<div><h4>flip_horiz(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune by  \nflipping it around a vertical axis,  \ncreating a mirror image</p></div></div>",
  "flip_vert": "<div><h4>flip_vert(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune by  \nflipping it around a horizontal axis,  \nturning it upside down</p></div></div>",
  "from_url": "<div><h4>from_url(imageUrl: string) → {string}</h4><div class=\"description\"><p>Create a rune using the image provided in the url</p></div></div>",
  "green": "<div><h4>green(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune green (#4CAF50).</p></div></div>",
  "hollusion": "<div><h4>hollusion(rune: string) → {string}</h4><div class=\"description\"><p>Renders the specified Rune in a tab as a hollusion, with a default magnitude  \nof 0.1.</p></div></div>",
  "indigo": "<div><h4>indigo(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune indigo (#3F51B5).</p></div></div>",
  "make_cross": "<div><h4>make_cross(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune by  \narranging into a square for copies of the  \ngiven Rune in different orientations</p></div></div>",
  "orange": "<div><h4>orange(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune orange (#FF9800).</p></div></div>",
  "overlay": "<div><h4>overlay(rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>The depth range of the z-axis of a rune is [0,-1], this function maps the depth range of rune1 and rune2 to [0,-0.5] and [-0.5,-1] respectively.</p></div></div>",
  "overlay_frac": "<div><h4>overlay_frac(frac: number, rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>The depth range of the z-axis of a rune is [0,-1], this function gives a [0, -frac] of the depth range to rune1 and the rest to rune2.</p></div></div>",
  "pink": "<div><h4>pink(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune pink (#E91E63s).</p></div></div>",
  "purple": "<div><h4>purple(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune purple (#AA00FF).</p></div></div>",
  "quarter_turn_left": "<div><h4>quarter_turn_left(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune  \nby turning it a quarter-turn in  \nanti-clockwise direction.</p></div></div>",
  "quarter_turn_right": "<div><h4>quarter_turn_right(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune  \nby turning it a quarter-turn around the centre in  \nclockwise direction.</p></div></div>",
  "random_color": "<div><h4>random_color(rune: string) → {string}</h4><div class=\"description\"><p>Gives random color to the given rune.  \nThe color is chosen randomly from the following nine  \ncolors: red, pink, purple, indigo, blue, green, yellow, orange, brown</p></div></div>",
  "red": "<div><h4>red(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune red (#F44336).</p></div></div>",
  "repeat_pattern": "<div><h4>repeat_pattern(n: number, pattern: undefined, initial: string) → {string}</h4><div class=\"description\"><p>Applies a given function n times to an initial value</p></div></div>",
  "rotate": "<div><h4>rotate(rad: number, rune: string) → {string}</h4><div class=\"description\"><p>Rotates a given Rune by a given angle,  \ngiven in radians, in anti-clockwise direction.  \nNote that parts of the Rune  \nmay be cropped as a result.</p></div></div>",
  "scale": "<div><h4>scale(ratio: number, rune: string) → {string}</h4><div class=\"description\"><p>Scales a given Rune by a given factor in both x and y direction</p></div></div>",
  "scale_independent": "<div><h4>scale_independent(ratio_x: number, ratio_y: number, rune: string) → {string}</h4><div class=\"description\"><p>Scales a given Rune by separate factors in x and y direction</p></div></div>",
  "show": "<div><h4>show(rune: string) → {string}</h4><div class=\"description\"><p>Renders the specified Rune in a tab as a basic drawing.</p></div></div>",
  "stack": "<div><h4>stack(rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from two given Runes by  \nplacing the first on top of the second, each  \noccupying equal parts of the height of the  \nresult</p></div></div>",
  "stack_frac": "<div><h4>stack_frac(frac: number, rune1: string, rune2: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from two given Runes by  \nplacing the first on top of the second  \nsuch that the first one occupies frac  \nportion of the height of the result and  \nthe second the rest</p></div></div>",
  "stackn": "<div><h4>stackn(n: number, rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune  \nby vertically stacking n copies of it</p></div></div>",
  "translate": "<div><h4>translate(x: number, y: number, rune: string) → {string}</h4><div class=\"description\"><p>Translates a given Rune by given values in x and y direction</p></div></div>",
  "turn_upside_down": "<div><h4>turn_upside_down(rune: string) → {string}</h4><div class=\"description\"><p>Makes a new Rune from a given Rune  \nby turning it upside-down</p></div></div>",
  "white": "<div><h4>white(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune white (#FFFFFF).</p></div></div>",
  "yellow": "<div><h4>yellow(rune: string) → {string}</h4><div class=\"description\"><p>Colors the given rune yellow (#FFEB3B).</p></div></div>"
}